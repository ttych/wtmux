#!/bin/sh
# -*- mode: sh -*-

has_tmux()
{
    which tmux >/dev/null 2>/dev/null
}

in_tmux()
{
    [ -n "$TMUX" ]
}

daemonize()
{
    :
}

not_in_tmux()
{
    ! in_tmux
}

tmux_session_exists()
{
    [ -z "$1" ] && return 1
    tmux has-session -t "$1"
}

tmux_session_name_for()
{
    tmux_session_name_for__base="$1"
    if [ -z "$tmux_session_name_for__base" ]; then
        if [ "$PWD" = "$HOME" ]; then
            tmux_session_name_for__base="home"
        else
            tmux_session_name_for__base="${PWD##*/}"
        fi
    fi
    tmux_session_name_for="$(echo $tmux_session_name_for__base | tr :. _)"
}

_wtmux_auto()
{
    has_tmux || return 1

    tmux_session_name_for "$1"

    if ! tmux_session_exists "$tmux_session_name_for"; then
        echo 'DAEMON' >> /tmp/debug
            TMUX='' tmux new-session -Ads "$tmux_session_name_for"
    fi

    if not_in_tmux; then
        echo 'client not in' >> /tmp/debug
         tmux attach -t "$tmux_session_name_for"
     else
         echo 'client in ' >> /tmp/debug
        tmux switch-client -t "$tmux_session_name_for"
    fi
}

_wtmux_killall()
{
    tmux kill-session -a
    tmux kill-session -t $(tmux display-message -p '#S')
}


_wtmux()
{
    _wtmux=
    _wtmux__ret=0

    case "$1" in
        killall)
            _wtmux_killall
            _wtmux__ret="$?"
            ;;
        *) _wtmux_auto "$@"
           _wtmux__ret="$?"
           ;;
    esac

    return $_wtmux__ret
}

if [ "${0##*/}" = 'wtmux' ]; then
    _wtmux "$@"
    wtmux="$?"
    [ -n "_wtmux" ] && printf "%s\n" "$_wtmux"
    exit $wtmux
fi
