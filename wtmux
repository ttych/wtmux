#!/bin/sh
# -*- mode: sh -*-

TMUX_CONF_DIR="${TMUX_CONF_DIR:-$HOME/.tmux}"


has_tmux()
{
    which tmux >/dev/null 2>/dev/null
}

in_tmux()
{
    [ -n "$TMUX" ]
}

daemonize()
{
    :
}

not_in_tmux()
{
    ! in_tmux
}

tmux_session_exists()
{
    [ -z "$1" ] && return 1
    tmux has-session -t "$1" 2>/dev/null
}

tmux_session_name_for()
{
    tmux_session_name_for__base="$1"
    if [ -z "$tmux_session_name_for__base" ]; then
        if [ "$PWD" = "$HOME" ]; then
            tmux_session_name_for__base="home"
        else
            tmux_session_name_for__base="${PWD##*/}"
        fi
    fi
    tmux_session_name_for="$(echo $tmux_session_name_for__base | tr :. _)"
}

_wtmux_session()
{
    _wtmux_session__name="$1"
    _wtmux_session__dir="${2:-$PWD}"
    TMUX= tmux new-session -c "$_wtmux_session__dir" -s "$_wtmux_session__name" -d || return 1

    _wtmux_session__layout=`cat "$_wtmux_session__dir/.tmux" 2>/dev/null`
    if [ $? -ne 0 ]; then
        _wtmux_session__layout="session.$_wtmux_session__name"
    fi
    _wtmux_layout "$_wtmux_session__layout" "$_wtmux_session__name"

    return 0
}

_wtmux_layout()
{
    _wtmux_layout__name="$1"
    _wtmux_layout__session="$2"

    [ -z "$1" ] && return 0
    if [ -r "$TMUX_CONF_DIR/layouts/$_wtmux_layout__name" ]; then
        "$TMUX_CONF_DIR/layouts/$_wtmux_layout__name" "$_wtmux_layout__session"
    fi
}

_wtmux_auto()
{
    has_tmux || return 1

    tmux_session_name_for "$1"

    tmux_session_exists "=$tmux_session_name_for" ||
        _wtmux_session "$tmux_session_name_for" ||
        return 1
    if not_in_tmux; then
        tmux attach -t "$tmux_session_name_for"
    else
         tmux switch-client -t "$tmux_session_name_for"
    fi
}

_wtmux_killall()
{
    tmux kill-session -a
    tmux kill-session -t $(tmux display-message -p '#S')
}


_wtmux()
{
    _wtmux=
    _wtmux__ret=0

    case "$1" in
        _init_)
            if not in_tmux; then
                shift
                _wtmux_auto "$@"
                _wtmux__ret="$?"
            fi
            ;;
        killall)
            shift
            _wtmux_killall "$@"
            _wtmux__ret="$?"
            ;;
        *)
            _wtmux_auto "$@"
            _wtmux__ret="$?"
            ;;
    esac

    return $_wtmux__ret
}

if [ "${0##*/}" = 'wtmux' ]; then
    _wtmux "$@"
    wtmux="$?"
    [ -n "_wtmux" ] && printf "%s\n" "$_wtmux"
    exit $wtmux
fi
